Final Project Vision Statement - Ethan Clark
CS 342 @ Calvin College
Spring 2017

	For my information system project, I am thinking of creating a database to store information regarding a MIAA Basketball Conference
	fantasy league. In this fantasy league, users will get to create a team that belongs to a league to play against other users. Each user
	will only be allowed to be in one league and have only one team. This database will hold information regarding the players in the
	MIAA conference as well as the schools that each player belongs to. Each game the players play in will produce statistics (good
	things like points, rebounds, assists, blocks, steals, but also bad things like turnovers). I am also storing GPA for academic
	purposes because Division 3 schools really pride themselves on academic standards, so we can track things like eligibility for
	these players. I got actual data regarding the athletes from their school athletic website, getting 10 players from each school.
	The other data in the Users, League, Team, Athlete_Team, and Athlete_Game tables were all randomly generated.

	The likely users of this database will most likely be college students that are attending those schools in the MIAA conference.
	This would be a good way to have some fun with friends at your own college, or even have some cross-school challenges in this MIAA
	fantasy basketball league. This database will also be useful for players or coaches or fans who would want to track how an
	individual player is doing by taking a look at the statistics for that player. Fans of any team in the MIAA would have a good time
	using this database, whether to play with fantasy teams or to check out statistics.
	
	Practical queries for this database can be found in queries.sql. Two useful triggers can be found in triggers.sql. A useful stored
	procedure for trading two players between two fantasy teams can be found in procedures.sql. Information regarding the normal form of
	the data can be found in data.txt. A useful ER Diagram for this database can be found in ERD.png. The create.sql file creates the miaaFantasy
	user and grants them access to a bunch of things. It calls the load.sql file, which in turn drops the current data (with data.sql), generates
	the database schema (with schema.sql), and loads the data into the database (with data.sql). An optimization explanation for one of the queries
	can be found in optimizations.txt. Finally, the DataPump directory stores the data via Oracle's DataPump, the j2ee has a RESTful web service
	to load the data using Intellij IDE, and nosql contains a project that loads the data into Oracle's nosql database KVLite.
	
Additional Features for Final Project Deliverable

		- In my stored procedure, I lock the Athlete and Team tables as well because I thought of the case where a
		user tries to either modify or delete a Team record or an Athlete record during the tradePlayers
		transaction. This additional feature was talked about with Professor Vander Linden in his office.
		
		- I added a key-value structure in my noSQL project under the team table to hopefully help with sorting
		the fantasy teams by number of wins (as described by Professor Vander Linden on how to sort by year in the
		movie noSQL database from Homework13). Unfortunately, I think the KVStore has some issues comparing integers
		stored as strings that have different number of digits, so the outcome is not what it should be. See the miaaFantasy.java
		file in my noSQL project for more information.
		
		- I created another query in my noSQL project called getTeamValues that gets all the information regarding a
		given team id from user input (very similar to my getAthleteValues query).